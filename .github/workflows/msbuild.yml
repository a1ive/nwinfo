name: MSBuild

on:
  workflow_dispatch:
  push:
    branches:
      - "master"

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: |
        curl.exe -o pci.ids https://raw.githubusercontent.com/pciutils/pciids/master/pci.ids
        curl.exe -o usb.ids http://www.linux-usb.org/usb.ids
        curl.exe -o pnp.ids https://raw.githubusercontent.com/vcrhonek/hwdata/master/pnp.ids
        Add-Content -Path "pnp.ids" -Value "# Version: $(Get-Date -Format 'yyyy.MM.dd')"
        msbuild /m /p:Configuration=Release /p:platform=x64 ${{env.SOLUTION_FILE_PATH}}
        msbuild /m /p:Configuration=Release /p:platform=x86 ${{env.SOLUTION_FILE_PATH}}
        md nwinfo
        move x64\Release\nwinfo.exe nwinfo\nwinfo_x64.exe
        move x64\Release\gnwinfo.exe nwinfo\gnwinfo_x64.exe
        move Win32\Release\nwinfo.exe nwinfo\nwinfo_x86.exe
        move Win32\Release\gnwinfo.exe nwinfo\gnwinfo_x86.exe
        copy gnwinfo\gnwinfo.ini nwinfo\gnwinfo.ini
        copy LICENSE nwinfo\LICENSE
        copy pci.ids nwinfo\pci.ids
        copy usb.ids nwinfo\usb.ids
        copy pnp.ids nwinfo\pnp.ids
        copy Win32\Release\ryzenadj.dll nwinfo\ryzenadj.dll
        copy x64\Release\ryzenadjx64.dll nwinfo\ryzenadjx64.dll
        copy libcdi\libcdi.Win32.dll nwinfo\libcdi.Win32.dll
        copy libcdi\libcdi.x64.dll nwinfo\libcdi.x64.dll
        copy libnw\jep106.ids nwinfo\jep106.ids
        # copy winring0\WinRing0.sys nwinfo\WinRing0.sys
        # copy winring0\WinRing0x64.sys nwinfo\WinRing0x64.sys
        copy winring0\HwRwDrv.sys nwinfo\HwRwDrv.sys
        copy winring0\HwRwDrvx64.sys nwinfo\HwRwDrvx64.sys
        # copy winring0\HwRwDrvWin7x64.sys nwinfo\HwRwDrvWin7x64.sys

    - name: Run UPX
      uses: crazy-max/ghaction-upx@v3
      with:
        version: latest
        files: |
          .\nwinfo\nwinfo_x64.exe
          .\nwinfo\nwinfo_x86.exe
          .\nwinfo\gnwinfo_x64.exe
          .\nwinfo\gnwinfo_x86.exe
          .\nwinfo\libcdi.Win32.dll
          .\nwinfo\libcdi.x64.dll
          # .\nwinfo\ryzenadj.dll
          # .\nwinfo\ryzenadjx64.dll
        args: --best

    - name: Create ZIP
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'nwinfo.zip'
        directory: '.'
        path: 'nwinfo'

    - name: Delete old release
      continue-on-error: true
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        gh release delete latest --cleanup-tag --yes
      env:
        GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    - name: Release
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: |
        gh release create latest nwinfo.zip -t "Development Build" -p
      env:
        GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
